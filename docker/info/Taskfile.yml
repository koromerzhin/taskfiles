version: '3'

tasks:
  info:containers:running:
    desc: "Liste les conteneurs en cours d'ex√©cution avec leurs heures de d√©marrage"
    silent: true
    preconditions:
    - sh: command -v docker
      msg: "Docker n'est pas install√© ou accessible"
    summary: |
      Affiche tous les conteneurs en cours d'ex√©cution avec leurs informations de d√©marrage.

      Variables:
      - IMAGE_NAME: Filtrer par image (optionnel)
    vars:
      IMAGE_NAME: '{{.IMAGE_NAME | default ""}}'
    cmds:
    - |
      echo "üìã Conteneurs en cours d'ex√©cution :"
      echo ""

      if [ -n "{{.IMAGE_NAME}}" ]; then
        echo "üéØ Filtrage pour l'image: {{.IMAGE_NAME}}"
        docker ps --filter ancestor={{.IMAGE_NAME}} --format "table {{{{.Names}}}}\t{{{{.Image}}}}\t{{{{.Status}}}}\t{{{{.CreatedAt}}}}"
      else
        docker ps --format "table {{{{.Names}}}}\t{{{{.Image}}}}\t{{{{.Status}}}}\t{{{{.CreatedAt}}}}"
      fi

  info:container:inspect:
    desc: "Inspecte un conteneur pour obtenir ses informations de d√©marrage"
    silent: true
    preconditions:
    - sh: command -v docker
      msg: "Docker n'est pas install√© ou accessible"
    vars:
      CONTAINER_NAME: '{{.CONTAINER_NAME | default ""}}'
    summary: |
      Affiche les informations d√©taill√©es d'un conteneur, incluant les heures de cr√©ation et d√©marrage.

      Variables:
      - CONTAINER_NAME: Nom ou ID du conteneur (requis)

      Exemple:
      task docker:info:container:inspect CONTAINER_NAME=mon-conteneur
    cmds:
    - |
      if [ -z "{{.CONTAINER_NAME}}" ]; then
        echo "‚ùå CONTAINER_NAME est requis"
        echo "üìã Conteneurs disponibles :"
        docker ps --format "table {{{{.Names}}}}\t{{{{.Image}}}}\t{{{{.Status}}}}"
        exit 1
      fi

      if ! docker ps -a --format "{{{{.Names}}}}" | grep -q "^{{.CONTAINER_NAME}}$"; then
        echo "‚ùå Le conteneur '{{.CONTAINER_NAME}}' n'existe pas"
        echo "üìã Conteneurs disponibles :"
        docker ps -a --format "table {{{{.Names}}}}\t{{{{.Image}}}}\t{{{{.Status}}}}"
        exit 1
      fi

      echo "üîç Informations d√©taill√©es du conteneur '{{.CONTAINER_NAME}}' :"
      echo ""

      # Informations de base
      echo "üìä Informations g√©n√©rales :"
      docker inspect {{.CONTAINER_NAME}} --format "  Nom: {{{{.Name}}}}"
      docker inspect {{.CONTAINER_NAME}} --format "  Image: {{{{.Config.Image}}}}"
      docker inspect {{.CONTAINER_NAME}} --format "  √âtat: {{{{.State.Status}}}}"
      docker inspect {{.CONTAINER_NAME}} --format "  Cr√©√© le: {{{{.Created}}}}"
      docker inspect {{.CONTAINER_NAME}} --format "  D√©marr√© le: {{{{.State.StartedAt}}}}"
      docker inspect {{.CONTAINER_NAME}} --format "  Fini le: {{{{.State.FinishedAt}}}}"

      echo ""
      echo "‚è±Ô∏è  Dur√©e d'ex√©cution :"
      if docker inspect {{.CONTAINER_NAME}} --format "{{{{.State.Status}}}}" | grep -q "running"; then
        started=$(docker inspect {{.CONTAINER_NAME}} --format "{{{{.State.StartedAt}}}}")
        echo "  D√©marr√© depuis: $started"
        echo "  Statut: En cours d'ex√©cution"
      else
        echo "  Statut: Arr√™t√©"
      fi

  info:container:stats:
    desc: "Affiche les statistiques en temps r√©el d'un conteneur"
    silent: true
    preconditions:
    - sh: command -v docker
      msg: "Docker n'est pas install√© ou accessible"
    vars:
      CONTAINER_NAME: '{{.CONTAINER_NAME | default ""}}'
    summary: |
      Affiche les statistiques de performance d'un conteneur en temps r√©el.

      Variables:
      - CONTAINER_NAME: Nom du conteneur (optionnel, sinon tous)

      Exemples:
      task docker:info:container:stats
      task docker:info:container:stats CONTAINER_NAME=mon-conteneur
    cmds:
    - |
      if [ -n "{{.CONTAINER_NAME}}" ]; then
        echo "üìä Statistiques en temps r√©el pour '{{.CONTAINER_NAME}}' :"
        docker stats {{.CONTAINER_NAME}}
      else
        echo "üìä Statistiques en temps r√©el pour tous les conteneurs :"
        docker stats
      fi
