version: '3'

includes:
  swarm: ./swarm/Taskfile.yml
  images: ./images/Taskfile.yml
  info: ./info/Taskfile.yml
  monitor: ./monitor/Taskfile.yml
  network: ./network/Taskfile.yml
  stack: ./stack/Taskfile.yml

vars:
  CONTAINER_NAME: '{{.CONTAINER_NAME | default ""}}'
  IMAGE_NAME: '{{.IMAGE_NAME | default ""}}'

tasks:
  logs:container:tail:
    desc: "Affiche les logs d'un conteneur en temps r√©el"
    silent: true
    preconditions:
    - sh: command -v docker
      msg: "Docker n'est pas install√© ou accessible"
    summary: |
      Affiche les logs d'un conteneur avec horodatage.

      Variables:
      - CONTAINER_NAME: Nom du conteneur (requis)
      - LINES: Nombre de lignes √† afficher (d√©faut: 100)

      Exemple:
      task docker:logs:container:tail CONTAINER_NAME=mon-conteneur
    vars:
      LINES: '{{.LINES | default "100"}}'
    cmds:
    - |
      if [ -z "{{.CONTAINER_NAME}}" ]; then
        echo "‚ùå CONTAINER_NAME est requis"
        echo "üìã Conteneurs disponibles :"
        docker ps --format "table {{{{.Names}}}}\t{{{{.Image}}}}\t{{{{.Status}}}}"
        exit 1
      fi

      echo "üìÑ Logs du conteneur '{{.CONTAINER_NAME}}' ({{.LINES}} derni√®res lignes) :"
      docker logs --timestamps --tail {{.LINES}} --follow {{.CONTAINER_NAME}}

  history:containers:
    desc: "Affiche l'historique des conteneurs (y compris arr√™t√©s)"
    silent: true
    preconditions:
    - sh: command -v docker
      msg: "Docker n'est pas install√© ou accessible"
    summary: |
      Affiche tous les conteneurs (actifs et arr√™t√©s) avec leurs informations de d√©marrage.

      Variables:
      - IMAGE_NAME: Filtrer par image (optionnel)
    cmds:
    - |
      echo "üìú Historique de tous les conteneurs :"
      echo ""

      if [ -n "{{.IMAGE_NAME}}" ]; then
        echo "üéØ Filtrage pour l'image: {{.IMAGE_NAME}}"
        docker ps -a --filter ancestor={{.IMAGE_NAME}} --format "table {{{{.Names}}}}\t{{{{.Image}}}}\t{{{{.Status}}}}\t{{{{.CreatedAt}}}}"
      else
        docker ps -a --format "table {{{{.Names}}}}\t{{{{.Image}}}}\t{{{{.Status}}}}\t{{{{.CreatedAt}}}}"
      fi

  analyze:container:lifecycle:
    desc: "Analyse le cycle de vie d'un conteneur"
    silent: true
    preconditions:
    - sh: command -v docker
      msg: "Docker n'est pas install√© ou accessible"
    summary: |
      Analyse compl√®te du cycle de vie d'un conteneur avec tous les √©v√©nements.

      Variables:
      - CONTAINER_NAME: Nom du conteneur (requis)

      Exemple:
      task docker:analyze:container:lifecycle CONTAINER_NAME=mon-conteneur
    cmds:
    - |
      if [ -z "{{.CONTAINER_NAME}}" ]; then
        echo "‚ùå CONTAINER_NAME est requis"
        echo "üìã Conteneurs disponibles :"
        docker ps -a --format "table {{{{.Names}}}}\t{{{{.Image}}}}\t{{{{.Status}}}}"
        exit 1
      fi

      echo "üî¨ Analyse du cycle de vie du conteneur '{{.CONTAINER_NAME}}' :"
      echo ""

      # Informations de base
      task: info:container:inspect

      echo ""
      echo "üìä Historique des √©v√©nements (si disponible) :"
      echo "   Note: Les √©v√©nements Docker sont conserv√©s temporairement"

      # Tentative de r√©cup√©ration des √©v√©nements r√©cents
      container_id=$(docker inspect {{.CONTAINER_NAME}} --format "{{{{.Id}}}}" 2>/dev/null || echo "")
      if [ -n "$container_id" ]; then
        docker events --since 24h --filter container=$container_id --format "{{{{.Time}}}} - {{{{.Action}}}}" 2>/dev/null || echo "   Aucun √©v√©nement r√©cent trouv√©"
      fi
