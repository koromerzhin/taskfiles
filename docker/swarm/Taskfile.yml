version: '3'

# Taskfile pour Docker et Docker Compose

vars:
  # Variables pour Docker Swarm avec valeurs par d√©faut
  SWARM_DEFAULT_ADDR_POOL: '{{.SWARM_DEFAULT_ADDR_POOL | default "10.20.0.0/16"}}'
  SWARM_ADVERTISE_ADDR: '{{.SWARM_ADVERTISE_ADDR | default ""}}'
  SWARM_LISTEN_ADDR: '{{.SWARM_LISTEN_ADDR | default ""}}'

tasks:
  init:
    desc: "Initialise Docker Swarm avec options configurables"
    silent: true
    preconditions:
    - sh: command -v docker
      msg: "Docker n'est pas install√© ou accessible"
    cmds:
    - |
      echo "üê≥ Initialisation de Docker Swarm..."

      # Construction de la commande avec options conditionnelles
      SWARM_CMD="docker swarm init"

      # Ajouter default-addr-pool
      if [ -n "{{.SWARM_DEFAULT_ADDR_POOL}}" ]; then
        SWARM_CMD="$SWARM_CMD --default-addr-pool {{.SWARM_DEFAULT_ADDR_POOL}}"
        echo "üìã Pool d'adresses par d√©faut: {{.SWARM_DEFAULT_ADDR_POOL}}"
      fi

      # Ajouter advertise-addr si sp√©cifi√©
      if [ -n "{{.SWARM_ADVERTISE_ADDR}}" ]; then
        SWARM_CMD="$SWARM_CMD --advertise-addr {{.SWARM_ADVERTISE_ADDR}}"
        echo "üì° Adresse d'annonce: {{.SWARM_ADVERTISE_ADDR}}"
      fi

      # Ajouter listen-addr si sp√©cifi√©
      if [ -n "{{.SWARM_LISTEN_ADDR}}" ]; then
        SWARM_CMD="$SWARM_CMD --listen-addr {{.SWARM_LISTEN_ADDR}}"
        echo "üëÇ Adresse d'√©coute: {{.SWARM_LISTEN_ADDR}}"
      fi

      echo "üöÄ Ex√©cution: $SWARM_CMD"
      eval $SWARM_CMD

      if [ $? -eq 0 ]; then
        echo "‚úÖ Docker Swarm initialis√© avec succ√®s!"
        echo "üìã Pour voir les informations du cluster:"
        echo "   docker info"
        echo "üìã Pour ajouter des n≈ìuds:"
        echo "   docker swarm join-token worker"
        echo "   docker swarm join-token manager"
      else
        echo "‚ùå √âchec de l'initialisation de Docker Swarm"
      fi

  init-simple:
    desc: "Initialise Docker Swarm avec options par d√©faut"
    silent: true
    preconditions:
    - sh: command -v docker
      msg: "Docker n'est pas install√© ou accessible"
    cmds:
    - docker swarm init --default-addr-pool {{.SWARM_DEFAULT_ADDR_POOL}} --advertise-addr {{.SWARM_ADVERTISE_ADDR}}

  status:
    desc: "Affiche le statut du cluster Docker Swarm"
    silent: true
    preconditions:
    - sh: command -v docker
      msg: "Docker n'est pas install√© ou accessible"
    cmds:
    - |
      if docker info --format '{{.Swarm.LocalNodeState}}' | grep -q active; then
        echo "‚úÖ Docker Swarm est actif"
        echo ""
        echo "üìã Informations du cluster:"
        docker node ls
        echo ""
        echo "üìã Services en cours d'ex√©cution:"
        docker service ls
      else
        echo "‚ùå Docker Swarm n'est pas initialis√©"
        echo "üí° Pour l'initialiser: task docker:swarm:init"
      fi

  leave:
    desc: "Quitte le cluster Docker Swarm"
    silent: true
    preconditions:
    - sh: command -v docker
      msg: "Docker n'est pas install√© ou accessible"
    prompt: "√ätes-vous s√ªr de vouloir quitter le cluster Swarm ? (y/N)"
    cmds:
    - |
      echo "üö™ Sortie du cluster Docker Swarm..."
      if docker swarm leave --force; then
        echo "‚úÖ Quitt√© le cluster Docker Swarm avec succ√®s"
      else
        echo "‚ùå √âchec de la sortie du cluster"
      fi

  join-tokens:
    desc: "Affiche les tokens pour rejoindre le cluster"
    silent: true
    preconditions:
    - sh: command -v docker
      msg: "Docker n'est pas install√© ou accessible"
    - sh: docker info --format '{{.Swarm.LocalNodeState}}' | grep -q active
      msg: "Docker Swarm n'est pas initialis√© sur ce n≈ìud"
    cmds:
    - echo "üîë Token pour ajouter un Worker:"
    - docker swarm join-token worker
    - echo ""
    - echo "üîë Token pour ajouter un Manager:"
    - docker swarm join-token manager
